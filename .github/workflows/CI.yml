name: ci

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'


env:
  PKG_CONFIG_ALLOW_CROSS: 1

jobs:
  rust-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - id: cache-rust
        name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
    
      - name: run test
        run: cargo test -p database -p convert -p py_types

  linux:
    if: github.ref == 'refs/heads/main'
    needs: [rust-test]
    runs-on: ubuntu-latest
    steps:          
      - uses: actions/checkout@v3
      
      - name: install depends
        run: |
          sudo apt-get install pkg-config libudev-dev libssl-dev clang
          echo $PKG_CONFIG_ALLOW_CROSS

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: check package version
        run: |
          pip install --upgrade httpx toml
          python .github/check_version.py

      
      - id: cache-rust
        name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: v3

      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release --sdist -o dist --find-interpreter
          rust-toolchain: stable
      
          #maturin build --release --target aarch64-unknown-linux-gnu --zig

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    if: github.ref == 'refs/heads/main'
    needs: [rust-test]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
    
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: check package version
        run: |
          pip install --upgrade httpx toml
          python .github/check_version.py

      - id: cache-rust
        name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: v3

      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release -o dist --find-interpreter

      - name: upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    if: github.ref == 'refs/heads/main'
    needs: [rust-test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: check package version
        run: |
          pip install --upgrade httpx toml
          python .github/check_version.py

      - id: cache-rust
        name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: v3

      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release -o dist --universal2 --find-interpreter
      
      - name: ypload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    needs: [ macos, windows, linux, rust-test]
    runs-on: ubuntu-latest
    steps:
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: check package version
        run: |
          pip install --upgrade httpx toml
          python .github/check_version.py
      
      - name: install twine
        run: pip install -U twine

      - name: download articart
        uses: actions/download-artifact@v2
        with:
          name: wheels

      - name: twine check
        run: twine check *

      - name: upload to pypi
        run: twine upload * --skip-existing
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}